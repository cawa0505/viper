#! /bin/sh

#consider change the PS1 env var to include the ip addr:
#export PS1="\[\e[1;35m\]\u\[\033[m\]@\h-\[\e[1;92m\]\$(hostname -I | awk '{print \$1}')\[\033[m\]:\w \$ "

# $1 is the vm name
getvmip() {
  vmname=$1
  vmip "$vmname" # see vmip subdirectory
  while [ $? -ne 0 ]; do
    sleep 5
    vmip "$vmname"
  done
}

case $1 in
ls) # vm ls
  vboxmanage list vms
  ;;
ps) # vm ps
  vboxmanage list runningvms
  ;;
create)
  next=$(($(vboxmanage list vms | sort | tail -n 1 | cut -d " " -f1 | cut -d "\"" -f2 | cut -d "_" -f2) + 1))
  vmname="vm_$(printf %02d $next)"
  vboxmanage import "$2" --vsys 0 --vmname "$vmname"
  ;;
rm) # vm rm <vmname>...

  if [ $# -eq 1 ]; then
    echo "usage: vm rm <vmname>..."
    exit 0
  fi

  # accept multiple vms names
  for vmname in "${@:2}"; do
    echo "deleting $vmname ..."
    vboxmanage controlvm "$vmname" poweroff
    VBoxManage unregistervm "$vmname" --delete
  done
  ;;
start) # vm start <vmname>...

  if [ $# -eq 1 ]; then
    echo "usage: vm start <vmname>..."
    exit 0
  fi

  # accept multiple vms names
  for vmname in "${@:2}"; do
    echo "starting $vmname ..."
    vboxmanage startvm "$vmname" --type headless
    if [ $? -eq 0 ]; then
      echo "getting ip address..."
      ip=$(getvmip "$vmname")
      echo "\033[1;32m$ip\033[0m"
    fi
  done
  ;;
stop) # vm stop <vmname>...

  if [ $# -eq 1 ]; then
    echo "usage: vm stop <vmname>..."
    exit 0
  fi

  # accept multiple vms names
  for vmname in "${@:2}"; do
    echo "stoping $vmname ..."
    vboxmanage controlvm $"vmname" poweroff
  done
  ;;
*)
  echo "usage: vm (ls|ps|create|rm|start|stop) [options]"
  ;;
esac
